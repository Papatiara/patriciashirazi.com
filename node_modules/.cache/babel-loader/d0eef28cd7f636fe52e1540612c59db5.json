{"ast":null,"code":"import _slicedToArray from \"/Users/pattie/Documents/port/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/pattie/Documents/port/src/App.js\";\nimport React, { useState } from 'react';\nimport { css } from 'emotion';\nimport ScrollIntoView from 'react-scroll-into-view';\nimport { BrowserRouter as Router, Switch, Route, Link } from \"react-router-dom\";\nimport Header from './components/Header';\nimport Intro from './components/Intro';\nimport Subjects from './components/Subjects';\nimport Moody_text from './components/carousel/Moody_text';\nlet intViewportHeight = window.innerHeight;\nlet toString = (intViewportHeight - 100).toString() + \"px\";\n\nfunction App() {\n  const _useState = useState(false),\n        _useState2 = _slicedToArray(_useState, 2),\n        clickMoody = _useState2[0],\n        setClickMoody = _useState2[1];\n\n  if (!clickMoody) {\n    return React.createElement(Router, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 31\n      },\n      __self: this\n    }, React.createElement(Switch, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 32\n      },\n      __self: this\n    }, React.createElement(Route, {\n      path: \"/home\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 33\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 34\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 35\n      },\n      __self: this\n    }, React.createElement(Intro, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 36\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 38\n      },\n      __self: this\n    }, React.createElement(ScrollIntoView, {\n      selector: \"#header\",\n      className: styles.scroll,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 39\n      },\n      __self: this\n    }, React.createElement(\"button\", {\n      className: styles.button,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 40\n      },\n      __self: this\n    }, \" About me \")))), React.createElement(\"div\", {\n      className: styles.body,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 44\n      },\n      __self: this\n    }, React.createElement(Header, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 45\n      },\n      __self: this\n    }), React.createElement(Subjects, {\n      showMoody: setClickMoody,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 46\n      },\n      __self: this\n    })))));\n  } else {\n    return React.createElement(Router, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55\n      },\n      __self: this\n    }, React.createElement(Switch, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 57\n      },\n      __self: this\n    }, React.createElement(Route, {\n      path: \"/moody\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58\n      },\n      __self: this\n    }, React.createElement(Moody_text, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59\n      },\n      __self: this\n    })))));\n  } // if (!clickMoody) {\n  //   return (\n  //     <div>\n  // < div >\n  // <div>\n  //   <Intro />\n  // </div>\n  // <div>\n  //   <ScrollIntoView selector=\"#header\" className={styles.scroll}>\n  //     <button className={styles.button}> About me </button>\n  //   </ScrollIntoView>\n  // </div>\n  //     </div >\n  // <div className={styles.body}>\n  //   < Header />\n  //   <Subjects showMoody={setClickMoody} />\n  // </div>\n  //     </div>\n  //   );\n  // } else {\n  //   return (\n  //     <div>\n  //       <Moody_text />\n  //     </div>\n  //   )\n  // }\n\n}\n\nconst styles = {\n  body: css`\n  margin-top: 0%;\n  `,\n  button: css` \n  position: absolute;\n  top: ${toString};\n  left: 45%;\n  border-radius: 5px;\n  padding: 14px 28px;\n  cursor: pointer;\n  &:hover {\n  color: white;\n  background-color: black;\n  transition: 1s;\n  窶ッorder-color:#DDDDDD;\n  }&:focus {\n      outline: none;\n      窶ッackground-color: black;\n      color: white;\n\n  }\n  `,\n  scroll: css`\n  background-color: blue;\n  `\n};\nexport default App;","map":{"version":3,"sources":["/Users/pattie/Documents/port/src/App.js"],"names":["React","useState","css","ScrollIntoView","BrowserRouter","Router","Switch","Route","Link","Header","Intro","Subjects","Moody_text","intViewportHeight","window","innerHeight","toString","App","clickMoody","setClickMoody","styles","scroll","button","body"],"mappings":";;AACA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,SAASC,GAAT,QAAoB,SAApB;AACA,OAAOC,cAAP,MAA2B,wBAA3B;AAGA,SACEC,aAAa,IAAIC,MADnB,EAEEC,MAFF,EAGEC,KAHF,EAIEC,IAJF,QAKO,kBALP;AAUA,OAAOC,MAAP,MAAmB,qBAAnB;AACA,OAAOC,KAAP,MAAkB,oBAAlB;AACA,OAAOC,QAAP,MAAqB,uBAArB;AACA,OAAOC,UAAP,MAAuB,kCAAvB;AAGA,IAAIC,iBAAiB,GAAGC,MAAM,CAACC,WAA/B;AACA,IAAIC,QAAQ,GAAG,CAACH,iBAAiB,GAAG,GAArB,EAA0BG,QAA1B,KAAuC,IAAtD;;AAEA,SAASC,GAAT,GAAe;AAAA,oBACuBhB,QAAQ,CAAC,KAAD,CAD/B;AAAA;AAAA,QACNiB,UADM;AAAA,QACMC,aADN;;AAGb,MAAI,CAACD,UAAL,EAAiB;AACf,WACE,oBAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACA,oBAAC,KAAD;AAAO,MAAA,IAAI,EAAC,OAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,KAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,CADF,EAIE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,cAAD;AAAgB,MAAA,QAAQ,EAAC,SAAzB;AAAmC,MAAA,SAAS,EAAEE,MAAM,CAACC,MAArD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAQ,MAAA,SAAS,EAAED,MAAM,CAACE,MAA1B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBADF,CADF,CAJF,CADF,EAWE;AAAK,MAAA,SAAS,EAAEF,MAAM,CAACG,IAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAE,MAAF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,EAEE,oBAAC,QAAD;AAAU,MAAA,SAAS,EAAEJ,aAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFF,CAXF,CADA,CADF,CADF;AAuBD,GAxBD,MAwBO;AACL,WACE,oBAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,KAAD;AAAO,MAAA,IAAI,EAAC,QAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,UAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,CADF,CADF,CADF,CADF;AAaD,GAzCY,CA0Cb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACD;;AAED,MAAMC,MAAM,GAAG;AACbG,EAAAA,IAAI,EAAErB,GAAI;;GADG;AAIboB,EAAAA,MAAM,EAAEpB,GAAI;;SAELc,QAAS;;;;;;;;;;;;;;;;GANH;AAuBbK,EAAAA,MAAM,EAAEnB,GAAI;;;AAvBC,CAAf;AA4BA,eAAee,GAAf","sourcesContent":["\nimport React, { useState } from 'react';\nimport { css } from 'emotion'\nimport ScrollIntoView from 'react-scroll-into-view'\n\n\nimport {\n  BrowserRouter as Router,\n  Switch,\n  Route,\n  Link\n} from \"react-router-dom\";\n\n\n\n\nimport Header from './components/Header';\nimport Intro from './components/Intro';\nimport Subjects from './components/Subjects';\nimport Moody_text from './components/carousel/Moody_text';\n\n\nlet intViewportHeight = window.innerHeight;\nlet toString = (intViewportHeight - 100).toString() + \"px\"\n\nfunction App() {\n  const [clickMoody, setClickMoody] = useState(false);\n\n  if (!clickMoody) {\n    return (\n      <Router>\n        <Switch>\n        <Route path=\"/home\">\n          <div>\n            <div>\n              <Intro />\n            </div>\n            <div>\n              <ScrollIntoView selector=\"#header\" className={styles.scroll}>\n                <button className={styles.button}> About me </button>\n              </ScrollIntoView>\n            </div>\n          </div>\n          <div className={styles.body}>\n            < Header />\n            <Subjects showMoody={setClickMoody} />\n          </div>\n          </Route>\n        </Switch>\n      </Router>\n\n    )\n  } else {\n    return (\n      <Router>\n        <Switch>\n          <div>\n            <Route path=\"/moody\">\n              <Moody_text />\n            </Route>\n          </div>\n        </Switch>\n\n      </Router>\n\n    )\n  }\n  // if (!clickMoody) {\n  //   return (\n  //     <div>\n  // < div >\n  // <div>\n  //   <Intro />\n  // </div>\n  // <div>\n  //   <ScrollIntoView selector=\"#header\" className={styles.scroll}>\n  //     <button className={styles.button}> About me </button>\n  //   </ScrollIntoView>\n  // </div>\n  //     </div >\n  // <div className={styles.body}>\n  //   < Header />\n  //   <Subjects showMoody={setClickMoody} />\n  // </div>\n  //     </div>\n\n  //   );\n  // } else {\n  //   return (\n  //     <div>\n  //       <Moody_text />\n  //     </div>\n  //   )\n  // }\n}\n\nconst styles = {\n  body: css`\n  margin-top: 0%;\n  `,\n  button: css` \n  position: absolute;\n  top: ${toString};\n  left: 45%;\n  border-radius: 5px;\n  padding: 14px 28px;\n  cursor: pointer;\n  &:hover {\n  color: white;\n  background-color: black;\n  transition: 1s;\n  窶ッorder-color:#DDDDDD;\n  }&:focus {\n      outline: none;\n      窶ッackground-color: black;\n      color: white;\n\n  }\n  `,\n  scroll: css`\n  background-color: blue;\n  `\n}\n\nexport default App;"]},"metadata":{},"sourceType":"module"}